services:
  backend:
    build: ./backend
    ports:
      - "5000:5000"
    env_file:
      - .env
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      - postgres
  frontend:
    build: ./frontend
    ports:
      - "4000:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules 
    env_file:
      - .env

  # n8n:
  #   image: docker.n8n.io/n8nio/n8n
  #   ports:
  #     - "5678:5678"
  #   volumes:
  #     - ./n8n_data:/home/node/.n8n
  #   environment:
  #     - N8N_BASIC_AUTH_ACTIVE=false
  #   restart: always
  #   depends_on:
  #     - redis

  flowise:
    image: flowiseai/flowise
    ports:
      - "3001:3000"
    volumes:
      - ./flowise_data:/root/.flowise
    environment:
      - PORT=3000
      - FLOWISE_USERNAME=admin
      - FLOWISE_PASSWORD=admin
    restart: always

  postgres:
    image: postgres
    restart: always
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=resumos
    ports:
      - "5432:5432"
    volumes:
      - ./backend/database/init.sql:/docker-entrypoint-initdb.d/init.sql
      - postgres_data:/var/lib/postgresql/data
  pgadmin:
    image: dpage/pgadmin4:latest
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@exemplo.com    # e-mail de login no pgAdmin
      PGADMIN_DEFAULT_PASSWORD: admin            # senha de login no pgAdmin
    ports:
      - "5050:80"    # porta host:container (acesse http://localhost:5050)
    depends_on:
      - postgres
    volumes:
      - pgadmin_data:/var/lib/pgadmin

  # redis:
  #   image: redis:latest
  #   container_name: redis
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - redis_data:/data
  #   restart: always

  # evolution:
  #   image: fcastilho/evolution-api
  #   container_name: evolution
  #   ports:
  #     - "8080:8080"  # ou qualquer porta livre
  #   restart: always
  #   environment:
  #     - EVOLUTION_API_KEY=suachavesecreta
  #     - EVOLUTION_WHATSAPP_PHONE=5544997014045

volumes:
  postgres_data:
  pgadmin_data:
  redis_data:
  n8n_data: